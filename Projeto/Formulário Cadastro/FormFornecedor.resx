<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iAIiIAiIgP/Z
</value>
  </data>
</root>